{"version":3,"file":"index.modern.js","sources":["../src/components/Recorder.js"],"sourcesContent":["import React, { Component } from 'react';\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = 'audio/*';\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    // if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 100);\n    // }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n\n    this.setState(prevState => {\n      const miliseconds = prevState.miliseconds + 100;\n      return ({ time: this.milisecondsToTime(miliseconds), miliseconds: miliseconds });\n    });\n    \n    if(this.props.handleCountDown){\n      this.props.handleCountDown(this.state.time);\n    }\n    \n  }\n\n  milisecondsToTime(milisecs) {\n\n    let secs = milisecs / 1000;\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  }\n\n  async initRecorder() {\n    navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      if (this.props.mimeTypeToUseWhenRecording) {\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: this.props.mimeTypeToUseWhenRecording });\n      } else {\n        this.mediaRecorder = new MediaRecorder(stream);\n      }\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.stream = stream;\n    } else {\n      this.setState({ medianotFound: true });\n      console.log('Media Decives will work only with SSL.....');\n    }\n  }\n\n  async startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n\n    await this.initRecorder();\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n\n    if (this.stream.getAudioTracks) {\n      const tracks = this.stream.getAudioTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found')\n    }\n\n    this.mediaRecorder.stop();\n\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL, disableFullUI } = this.props;\n\n    if (disableFullUI) { return null; }\n\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {\n              !this.props.hideHeader ?\n                <div className={styles.reco_header}>\n                  <h2 className={styles.h2}>{title}</h2>\n                  <span className={styles.close_icons}>\n                  </span>\n                </div> :\n                null\n            }\n            {\n              !medianotFound ?\n                (\n                  <div className={styles.record_section}>\n                    <div className={styles.btn_wrapper}>\n                      <button\n                        onClick={\n                          () =>\n                            this.props.handleAudioUpload(this.state.audioBlob)\n                        }\n                        className={`${styles.btn} ${styles.upload_btn}`}\n                        disabled={this.props.uploadButtonDisabled}\n                      >\n                    Upload\n                      </button>\n                      <button\n                        onClick={(e) => this.handleReset(e)}\n                        className={`${styles.btn} ${styles.clear_btn}`}\n                      >\n                    Clear\n                      </button>\n                    </div>\n                    <div className={styles.duration_section}>\n                      <div className={styles.audio_section}>\n                        {\n                          audioURL !== null && showUIAudio ?\n                            (\n                              <audio controls>\n                                <source src={audios[0]} type='audio/ogg' />\n                                <source src={audios[0]} type='audio/mpeg' />\n                              </audio>\n                            ) :\n                            null\n                        }\n                      </div>\n                      <div className={styles.duration}>\n                        <span className={styles.mins}>\n                          {\n                            time.m !== undefined ?\n                              `${time.m <= 9 ? '0' + time.m : time.m}` :\n                              '00'\n                          }\n                        </span>\n                        <span className={styles.divider}>:</span>\n                        <span className={styles.secs}>\n                          {\n                            time.s !== undefined ?\n                              `${time.s <= 9 ? '0' + time.s : time.s}` :\n                              '00'\n                          }\n                        </span>\n                      </div>\n                      {\n                        !recording ?\n                          (\n                            <p className={styles.help}>Press the microphone to record</p>\n                          ) :\n                          null\n                      }\n                    </div>\n                    {\n                      !recording ?\n                        (\n                          <a\n                            onClick={e => this.startRecording(e)}\n                            href=' #'\n                            className={styles.mic_icon}\n                          >\n                            {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                            <span className={styles.microphone_icon_sec}>\n                              <svg className={styles.mic_icon_svg} version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enableBackground='new 0 0 1000 1000' >\n                                <g>\n                                  <path d='M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z' />\n                                </g>\n                              </svg>\n\n                            </span>\n                          </a>\n                        ) :\n                        (\n                          <div className={styles.record_controller}>\n                            <a\n                              onClick={e => this.stopRecording(e)}\n                              href=' #'\n                              className={`${styles.icons} ${styles.stop}`}\n                            >\n                              <span className={styles.stop_icon}></span>\n                              {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                              {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                            </a>\n                            <a\n                              onClick={\n                                !pauseRecord ?\n                                  e => this.handleAudioPause(e) :\n                                  e => this.handleAudioStart(e)\n                              }\n                              href=' #'\n                              className={`${styles.icons} ${styles.pause}`}\n                            >\n                              {\n                                pauseRecord ?\n                                  <span className={styles.play_icons}></span> :\n                                  <span className={styles.pause_icons}></span>\n                              }\n                            </a>\n                          </div>\n                        )\n                    }\n                  </div>\n                ) :\n                (\n                  <p style={{ color: '#fff', marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                  </p>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: (data) => {},\n}\n"],"names":["audioType","Recorder","props","state","time","miliseconds","recording","medianotFound","audios","audioBlob","stream","timer","startTimer","bind","countDown","handleAudioPause","e","preventDefault","clearInterval","mediaRecorder","pause","setState","pauseRecord","handleAudioStart","resume","setInterval","prevState","milisecondsToTime","handleCountDown","milisecs","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","h","m","s","ms","initRecorder","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","mimeTypeToUseWhenRecording","MediaRecorder","mimeType","chunks","ondataavailable","data","size","push","console","log","startRecording","start","stopRecording","getAudioTracks","tracks","forEach","track","stop","saveAudio","handleReset","blob","Blob","type","audioURL","window","URL","createObjectURL","handleAudioStop","url","duration","render","showUIAudio","title","disableFullUI","React","styles","recorder_library_box","recorder_box","recorder_box_inner","hideHeader","reco_header","h2","close_icons","record_section","btn_wrapper","handleAudioUpload","btn","upload_btn","uploadButtonDisabled","clear_btn","duration_section","audio_section","mins","undefined","divider","help","mic_icon","microphone_icon_sec","mic_icon_svg","record_controller","icons","stop_icon","play_icons","pause_icons","color","marginTop","fontSize","Component","defaultProps"],"mappings":"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"}