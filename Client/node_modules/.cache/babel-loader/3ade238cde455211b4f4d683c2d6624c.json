{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tools = require(\"./tools\");\n\nvar tools_1 = require(\"./tools\");\n\nvar schema = require(\"matroska/lib/schema\");\n\nvar byEbmlID = schema.byEbmlID;\n\nvar EBMLEncoder = function () {\n  function EBMLEncoder() {\n    this._schema = byEbmlID;\n    this._buffers = [];\n    this._stack = [];\n  }\n\n  EBMLEncoder.prototype.encode = function (elms) {\n    var _this = this;\n\n    return tools.concat(elms.reduce(function (lst, elm) {\n      return lst.concat(_this.encodeChunk(elm));\n    }, [])).buffer;\n  };\n\n  EBMLEncoder.prototype.encodeChunk = function (elm) {\n    if (elm.type === \"m\") {\n      if (!elm.isEnd) {\n        this.startTag(elm);\n      } else {\n        this.endTag(elm);\n      }\n    } else {\n      this.writeTag(elm);\n    }\n\n    return this.flush();\n  };\n\n  EBMLEncoder.prototype.flush = function () {\n    var ret = this._buffers;\n    this._buffers = [];\n    return ret;\n  };\n\n  EBMLEncoder.prototype.getSchemaInfo = function (tagName) {\n    var tagNums = Object.keys(this._schema).map(Number);\n\n    for (var i = 0; i < tagNums.length; i++) {\n      var tagNum = tagNums[i];\n\n      if (this._schema[tagNum].name === tagName) {\n        return new tools_1.Buffer(tagNum.toString(16), 'hex');\n      }\n    }\n\n    return null;\n  };\n\n  EBMLEncoder.prototype.writeTag = function (elm) {\n    var tagName = elm.name;\n    var tagId = this.getSchemaInfo(tagName);\n    var tagData = elm.data;\n\n    if (tagId == null) {\n      throw new Error('No schema entry found for ' + tagName);\n    }\n\n    var data = tools.encodeTag(tagId, tagData);\n    /**\n     * 親要素が閉じタグあり(isEnd)なら閉じタグが来るまで待つ(children queに入る)\n     */\n\n    if (this._stack.length > 0) {\n      var last = this._stack[this._stack.length - 1];\n      last.children.push({\n        tagId: tagId,\n        elm: elm,\n        children: [],\n        data: data\n      });\n      return;\n    }\n\n    this._buffers = this._buffers.concat(data);\n    return;\n  };\n\n  EBMLEncoder.prototype.startTag = function (elm) {\n    var tagName = elm.name;\n    var tagId = this.getSchemaInfo(tagName);\n\n    if (tagId == null) {\n      throw new Error('No schema entry found for ' + tagName);\n    }\n    /**\n     * 閉じタグ不定長の場合はスタックに積まずに即時バッファに書き込む\n     */\n\n\n    if (elm.unknownSize) {\n      var data = tools.encodeTag(tagId, new tools_1.Buffer(0), elm.unknownSize);\n      this._buffers = this._buffers.concat(data);\n      return;\n    }\n\n    var tag = {\n      tagId: tagId,\n      elm: elm,\n      children: [],\n      data: null\n    };\n\n    if (this._stack.length > 0) {\n      this._stack[this._stack.length - 1].children.push(tag);\n    }\n\n    this._stack.push(tag);\n  };\n\n  EBMLEncoder.prototype.endTag = function (elm) {\n    var tagName = elm.name;\n\n    var tag = this._stack.pop();\n\n    if (tag == null) {\n      throw new Error(\"EBML structure is broken\");\n    }\n\n    if (tag.elm.name !== elm.name) {\n      throw new Error(\"EBML structure is broken\");\n    }\n\n    var childTagDataBuffers = tag.children.reduce(function (lst, child) {\n      if (child.data === null) {\n        throw new Error(\"EBML structure is broken\");\n      }\n\n      return lst.concat(child.data);\n    }, []);\n    var childTagDataBuffer = tools.concat(childTagDataBuffers);\n\n    if (tag.elm.type === \"m\") {\n      tag.data = tools.encodeTag(tag.tagId, childTagDataBuffer, tag.elm.unknownSize);\n    } else {\n      tag.data = tools.encodeTag(tag.tagId, childTagDataBuffer);\n    }\n\n    if (this._stack.length < 1) {\n      this._buffers = this._buffers.concat(tag.data);\n    }\n  };\n\n  return EBMLEncoder;\n}();\n\nexports.default = EBMLEncoder;","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/node_modules/ts-ebml/lib/EBMLEncoder.js"],"names":["Object","defineProperty","exports","value","tools","require","tools_1","schema","byEbmlID","EBMLEncoder","_schema","_buffers","_stack","prototype","encode","elms","_this","concat","reduce","lst","elm","encodeChunk","buffer","type","isEnd","startTag","endTag","writeTag","flush","ret","getSchemaInfo","tagName","tagNums","keys","map","Number","i","length","tagNum","name","Buffer","toString","tagId","tagData","data","Error","encodeTag","last","children","push","unknownSize","tag","pop","childTagDataBuffers","child","childTagDataBuffer","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tools = require(\"./tools\");\nvar tools_1 = require(\"./tools\");\nvar schema = require(\"matroska/lib/schema\");\nvar byEbmlID = schema.byEbmlID;\nvar EBMLEncoder = (function () {\n    function EBMLEncoder() {\n        this._schema = byEbmlID;\n        this._buffers = [];\n        this._stack = [];\n    }\n    EBMLEncoder.prototype.encode = function (elms) {\n        var _this = this;\n        return tools.concat(elms.reduce(function (lst, elm) {\n            return lst.concat(_this.encodeChunk(elm));\n        }, [])).buffer;\n    };\n    EBMLEncoder.prototype.encodeChunk = function (elm) {\n        if (elm.type === \"m\") {\n            if (!elm.isEnd) {\n                this.startTag(elm);\n            }\n            else {\n                this.endTag(elm);\n            }\n        }\n        else {\n            this.writeTag(elm);\n        }\n        return this.flush();\n    };\n    EBMLEncoder.prototype.flush = function () {\n        var ret = this._buffers;\n        this._buffers = [];\n        return ret;\n    };\n    EBMLEncoder.prototype.getSchemaInfo = function (tagName) {\n        var tagNums = Object.keys(this._schema).map(Number);\n        for (var i = 0; i < tagNums.length; i++) {\n            var tagNum = tagNums[i];\n            if (this._schema[tagNum].name === tagName) {\n                return new tools_1.Buffer(tagNum.toString(16), 'hex');\n            }\n        }\n        return null;\n    };\n    EBMLEncoder.prototype.writeTag = function (elm) {\n        var tagName = elm.name;\n        var tagId = this.getSchemaInfo(tagName);\n        var tagData = elm.data;\n        if (tagId == null) {\n            throw new Error('No schema entry found for ' + tagName);\n        }\n        var data = tools.encodeTag(tagId, tagData);\n        /**\n         * 親要素が閉じタグあり(isEnd)なら閉じタグが来るまで待つ(children queに入る)\n         */\n        if (this._stack.length > 0) {\n            var last = this._stack[this._stack.length - 1];\n            last.children.push({\n                tagId: tagId,\n                elm: elm,\n                children: [],\n                data: data\n            });\n            return;\n        }\n        this._buffers = this._buffers.concat(data);\n        return;\n    };\n    EBMLEncoder.prototype.startTag = function (elm) {\n        var tagName = elm.name;\n        var tagId = this.getSchemaInfo(tagName);\n        if (tagId == null) {\n            throw new Error('No schema entry found for ' + tagName);\n        }\n        /**\n         * 閉じタグ不定長の場合はスタックに積まずに即時バッファに書き込む\n         */\n        if (elm.unknownSize) {\n            var data = tools.encodeTag(tagId, new tools_1.Buffer(0), elm.unknownSize);\n            this._buffers = this._buffers.concat(data);\n            return;\n        }\n        var tag = {\n            tagId: tagId,\n            elm: elm,\n            children: [],\n            data: null\n        };\n        if (this._stack.length > 0) {\n            this._stack[this._stack.length - 1].children.push(tag);\n        }\n        this._stack.push(tag);\n    };\n    EBMLEncoder.prototype.endTag = function (elm) {\n        var tagName = elm.name;\n        var tag = this._stack.pop();\n        if (tag == null) {\n            throw new Error(\"EBML structure is broken\");\n        }\n        if (tag.elm.name !== elm.name) {\n            throw new Error(\"EBML structure is broken\");\n        }\n        var childTagDataBuffers = tag.children.reduce(function (lst, child) {\n            if (child.data === null) {\n                throw new Error(\"EBML structure is broken\");\n            }\n            return lst.concat(child.data);\n        }, []);\n        var childTagDataBuffer = tools.concat(childTagDataBuffers);\n        if (tag.elm.type === \"m\") {\n            tag.data = tools.encodeTag(tag.tagId, childTagDataBuffer, tag.elm.unknownSize);\n        }\n        else {\n            tag.data = tools.encodeTag(tag.tagId, childTagDataBuffer);\n        }\n        if (this._stack.length < 1) {\n            this._buffers = this._buffers.concat(tag.data);\n        }\n    };\n    return EBMLEncoder;\n}());\nexports.default = EBMLEncoder;\n"]},"metadata":{},"sourceType":"script"}