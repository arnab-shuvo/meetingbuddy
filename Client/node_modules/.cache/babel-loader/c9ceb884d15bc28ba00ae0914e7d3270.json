{"ast":null,"code":"// int64-buffer.js\n\n/*jshint -W018 */\n// Confusing use of '!'.\n\n/*jshint -W030 */\n// Expected an assignment or function call and instead saw an expression.\n\n/*jshint -W093 */\n// Did you mean to return a conditional instead of an assignment?\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n!function (exports) {\n  // constants\n  var UNDEFINED = \"undefined\";\n  var BUFFER = UNDEFINED !== typeof Buffer && Buffer;\n  var UINT8ARRAY = UNDEFINED !== typeof Uint8Array && Uint8Array;\n  var ARRAYBUFFER = UNDEFINED !== typeof ArrayBuffer && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216; // storage class\n\n  var storage; // Array;\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false); // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n\n    var _isInt64 = \"_\" + isName; // properties\n\n\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true; // methods\n\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray; // add .toBuffer() method only when Buffer available\n\n    if (BUFFER) proto.toBuffer = toBuffer; // add .toArrayBuffer() method only when Uint8Array available\n\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer; // isUint64BE, isInt64BE\n\n    Int64[isName] = isInt64; // CommonJS\n\n    exports[name] = Int64;\n    return Int64; // constructor\n\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    } // isUint64BE, isInt64BE\n\n\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    } // initializer\n\n\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      } // Int64BE() style\n\n\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      } // Int64BE(value, raddix) style\n\n\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0; // Int64BE(buffer, offset) style\n\n      if (UNDEFINED === typeof value) return; // Int64BE(buffer, offset, value, raddix) style\n\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n\n      if (sign) {\n        high = ~high;\n\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n\n      return high ? high * BIT32 + low : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && high & 0x80000000;\n\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n\n      radix = radix || 10;\n\n      while (1) {\n        var mod = high % radix * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n\n      if (sign) {\n        str = \"-\" + str;\n      }\n\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return buffer[offset + pos0] * BIT24 + (buffer[offset + pos1] << 16) + (buffer[offset + pos2] << 8) + buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && arrbuf instanceof ARRAYBUFFER && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && offset + 8 <= len && \"string\" !== typeof buffer[offset];\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n\n    while (pos > offset) {\n      buffer[--pos] = -value & 255 ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n\n    while (offset < end) {\n      buffer[offset++] = -value & 255 ^ 255;\n      value /= 256;\n    }\n  } // https://github.com/retrofox/is-array\n\n\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : this || {});","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/node_modules/int64-buffer/int64-buffer.js"],"names":["Uint64BE","Int64BE","Uint64LE","Int64LE","exports","UNDEFINED","BUFFER","Buffer","UINT8ARRAY","Uint8Array","ARRAYBUFFER","ArrayBuffer","ZERO","isArray","Array","_isArray","BIT32","BIT24","storage","factory","name","bigendian","unsigned","posH","posL","pos0","pos1","pos2","pos3","fromPositive","fromPositiveBE","fromPositiveLE","fromNegative","fromNegativeBE","fromNegativeLE","proto","Int64","prototype","isName","_isInt64","buffer","offset","toNumber","toString","toJSON","toArray","toBuffer","toArrayBuffer","isInt64","value","raddix","init","b","that","newArray","isValidBuffer","_storage","fromString","fromArray","writeInt32","str","pos","len","length","high","low","sign","chr","parseInt","Math","floor","readInt32","radix","mod","raw","isBuffer","dest","arrbuf","byteLength","destbuf","destoff","srcbuf","srcoff","i","slice","call","end","val","Object","nodeName"],"mappings":"AAAA;;AAEA;AAAkB;;AAClB;AAAkB;;AAClB;AAAkB;AAElB,IAAIA,QAAJ,EAAcC,OAAd,EAAuBC,QAAvB,EAAiCC,OAAjC;AAEA,CAAC,UAASC,OAAT,EAAkB;AACjB;AAEA,MAAIC,SAAS,GAAG,WAAhB;AACA,MAAIC,MAAM,GAAID,SAAS,KAAK,OAAOE,MAAtB,IAAiCA,MAA9C;AACA,MAAIC,UAAU,GAAIH,SAAS,KAAK,OAAOI,UAAtB,IAAqCA,UAAtD;AACA,MAAIC,WAAW,GAAIL,SAAS,KAAK,OAAOM,WAAtB,IAAsCA,WAAxD;AACA,MAAIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAX;AACA,MAAIC,OAAO,GAAGC,KAAK,CAACD,OAAN,IAAiBE,QAA/B;AACA,MAAIC,KAAK,GAAG,UAAZ;AACA,MAAIC,KAAK,GAAG,QAAZ,CAViB,CAYjB;;AAEA,MAAIC,OAAJ,CAdiB,CAcJ;AAEb;;AAEAlB,EAAAA,QAAQ,GAAGmB,OAAO,CAAC,UAAD,EAAa,IAAb,EAAmB,IAAnB,CAAlB;AACAlB,EAAAA,OAAO,GAAGkB,OAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,KAAlB,CAAjB;AACAjB,EAAAA,QAAQ,GAAGiB,OAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,IAApB,CAAlB;AACAhB,EAAAA,OAAO,GAAGgB,OAAO,CAAC,SAAD,EAAY,KAAZ,EAAmB,KAAnB,CAAjB,CArBiB,CAuBjB;;AAEA,WAASA,OAAT,CAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4C;AAC1C,QAAIC,IAAI,GAAGF,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAIG,IAAI,GAAGH,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAII,IAAI,GAAGJ,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAIK,IAAI,GAAGL,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAIM,IAAI,GAAGN,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAIO,IAAI,GAAGP,SAAS,GAAG,CAAH,GAAO,CAA3B;AACA,QAAIQ,YAAY,GAAGR,SAAS,GAAGS,cAAH,GAAoBC,cAAhD;AACA,QAAIC,YAAY,GAAGX,SAAS,GAAGY,cAAH,GAAoBC,cAAhD;AACA,QAAIC,KAAK,GAAGC,KAAK,CAACC,SAAlB;AACA,QAAIC,MAAM,GAAG,OAAOlB,IAApB;;AACA,QAAImB,QAAQ,GAAG,MAAMD,MAArB,CAX0C,CAa1C;;;AACAH,IAAAA,KAAK,CAACK,MAAN,GAAe,KAAK,CAApB;AACAL,IAAAA,KAAK,CAACM,MAAN,GAAe,CAAf;AACAN,IAAAA,KAAK,CAACI,QAAD,CAAL,GAAkB,IAAlB,CAhB0C,CAkB1C;;AACAJ,IAAAA,KAAK,CAACO,QAAN,GAAiBA,QAAjB;AACAP,IAAAA,KAAK,CAACQ,QAAN,GAAiBA,QAAjB;AACAR,IAAAA,KAAK,CAACS,MAAN,GAAeF,QAAf;AACAP,IAAAA,KAAK,CAACU,OAAN,GAAgBA,OAAhB,CAtB0C,CAwB1C;;AACA,QAAIvC,MAAJ,EAAY6B,KAAK,CAACW,QAAN,GAAiBA,QAAjB,CAzB8B,CA2B1C;;AACA,QAAItC,UAAJ,EAAgB2B,KAAK,CAACY,aAAN,GAAsBA,aAAtB,CA5B0B,CA8B1C;;AACAX,IAAAA,KAAK,CAACE,MAAD,CAAL,GAAgBU,OAAhB,CA/B0C,CAiC1C;;AACA5C,IAAAA,OAAO,CAACgB,IAAD,CAAP,GAAgBgB,KAAhB;AAEA,WAAOA,KAAP,CApC0C,CAsC1C;;AACA,aAASA,KAAT,CAAeI,MAAf,EAAuBC,MAAvB,EAA+BQ,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,UAAI,EAAE,gBAAgBd,KAAlB,CAAJ,EAA8B,OAAO,IAAIA,KAAJ,CAAUI,MAAV,EAAkBC,MAAlB,EAA0BQ,KAA1B,EAAiCC,MAAjC,CAAP;AAC9B,aAAOC,IAAI,CAAC,IAAD,EAAOX,MAAP,EAAeC,MAAf,EAAuBQ,KAAvB,EAA8BC,MAA9B,CAAX;AACD,KA1CyC,CA4C1C;;;AACA,aAASF,OAAT,CAAiBI,CAAjB,EAAoB;AAClB,aAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACb,QAAD,CAAR,CAAR;AACD,KA/CyC,CAiD1C;;;AACA,aAASY,IAAT,CAAcE,IAAd,EAAoBb,MAApB,EAA4BC,MAA5B,EAAoCQ,KAApC,EAA2CC,MAA3C,EAAmD;AACjD,UAAI1C,UAAU,IAAIE,WAAlB,EAA+B;AAC7B,YAAI8B,MAAM,YAAY9B,WAAtB,EAAmC8B,MAAM,GAAG,IAAIhC,UAAJ,CAAegC,MAAf,CAAT;AACnC,YAAIS,KAAK,YAAYvC,WAArB,EAAkCuC,KAAK,GAAG,IAAIzC,UAAJ,CAAeyC,KAAf,CAAR;AACnC,OAJgD,CAMjD;;;AACA,UAAI,CAACT,MAAD,IAAW,CAACC,MAAZ,IAAsB,CAACQ,KAAvB,IAAgC,CAAC/B,OAArC,EAA8C;AAC5C;AACAmC,QAAAA,IAAI,CAACb,MAAL,GAAcc,QAAQ,CAAC1C,IAAD,EAAO,CAAP,CAAtB;AACA;AACD,OAXgD,CAajD;;;AACA,UAAI,CAAC2C,aAAa,CAACf,MAAD,EAASC,MAAT,CAAlB,EAAoC;AAClC,YAAIe,QAAQ,GAAGtC,OAAO,IAAIJ,KAA1B;;AACAoC,QAAAA,MAAM,GAAGT,MAAT;AACAQ,QAAAA,KAAK,GAAGT,MAAR;AACAC,QAAAA,MAAM,GAAG,CAAT;AACAD,QAAAA,MAAM,GAAG,IAAIgB,QAAJ,CAAa,CAAb,CAAT;AACD;;AAEDH,MAAAA,IAAI,CAACb,MAAL,GAAcA,MAAd;AACAa,MAAAA,IAAI,CAACZ,MAAL,GAAcA,MAAM,IAAI,CAAxB,CAvBiD,CAyBjD;;AACA,UAAIpC,SAAS,KAAK,OAAO4C,KAAzB,EAAgC,OA1BiB,CA4BjD;;AACA,UAAI,aAAa,OAAOA,KAAxB,EAA+B;AAC7BQ,QAAAA,UAAU,CAACjB,MAAD,EAASC,MAAT,EAAiBQ,KAAjB,EAAwBC,MAAM,IAAI,EAAlC,CAAV;AACD,OAFD,MAEO,IAAIK,aAAa,CAACN,KAAD,EAAQC,MAAR,CAAjB,EAAkC;AACvCQ,QAAAA,SAAS,CAAClB,MAAD,EAASC,MAAT,EAAiBQ,KAAjB,EAAwBC,MAAxB,CAAT;AACD,OAFM,MAEA,IAAI,aAAa,OAAOA,MAAxB,EAAgC;AACrCS,QAAAA,UAAU,CAACnB,MAAD,EAASC,MAAM,GAAGlB,IAAlB,EAAwB0B,KAAxB,CAAV,CADqC,CACK;;AAC1CU,QAAAA,UAAU,CAACnB,MAAD,EAASC,MAAM,GAAGjB,IAAlB,EAAwB0B,MAAxB,CAAV,CAFqC,CAEM;AAC5C,OAHM,MAGA,IAAID,KAAK,GAAG,CAAZ,EAAe;AACpBpB,QAAAA,YAAY,CAACW,MAAD,EAASC,MAAT,EAAiBQ,KAAjB,CAAZ,CADoB,CACiB;AACtC,OAFM,MAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;AACpBjB,QAAAA,YAAY,CAACQ,MAAD,EAASC,MAAT,EAAiBQ,KAAjB,CAAZ,CADoB,CACiB;AACtC,OAFM,MAEA;AACLS,QAAAA,SAAS,CAAClB,MAAD,EAASC,MAAT,EAAiB7B,IAAjB,EAAuB,CAAvB,CAAT,CADK,CAC+B;AACrC;AACF;;AAED,aAAS6C,UAAT,CAAoBjB,MAApB,EAA4BC,MAA5B,EAAoCmB,GAApC,EAAyCV,MAAzC,EAAiD;AAC/C,UAAIW,GAAG,GAAG,CAAV;AACA,UAAIC,GAAG,GAAGF,GAAG,CAACG,MAAd;AACA,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIC,GAAG,GAAG,CAAV;AACA,UAAIL,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoBC,GAAG;AACvB,UAAIK,IAAI,GAAGL,GAAX;;AACA,aAAOA,GAAG,GAAGC,GAAb,EAAkB;AAChB,YAAIK,GAAG,GAAGC,QAAQ,CAACR,GAAG,CAACC,GAAG,EAAJ,CAAJ,EAAaX,MAAb,CAAlB;AACA,YAAI,EAAEiB,GAAG,IAAI,CAAT,CAAJ,EAAiB,MAFD,CAEQ;;AACxBF,QAAAA,GAAG,GAAGA,GAAG,GAAGf,MAAN,GAAeiB,GAArB;AACAH,QAAAA,IAAI,GAAGA,IAAI,GAAGd,MAAP,GAAgBmB,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAGjD,KAAjB,CAAvB;AACAiD,QAAAA,GAAG,IAAIjD,KAAP;AACD;;AACD,UAAIkD,IAAJ,EAAU;AACRF,QAAAA,IAAI,GAAG,CAACA,IAAR;;AACA,YAAIC,GAAJ,EAAS;AACPA,UAAAA,GAAG,GAAGjD,KAAK,GAAGiD,GAAd;AACD,SAFD,MAEO;AACLD,UAAAA,IAAI;AACL;AACF;;AACDL,MAAAA,UAAU,CAACnB,MAAD,EAASC,MAAM,GAAGlB,IAAlB,EAAwByC,IAAxB,CAAV;AACAL,MAAAA,UAAU,CAACnB,MAAD,EAASC,MAAM,GAAGjB,IAAlB,EAAwByC,GAAxB,CAAV;AACD;;AAED,aAASvB,QAAT,GAAoB;AAClB,UAAIF,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIuB,IAAI,GAAGO,SAAS,CAAC/B,MAAD,EAASC,MAAM,GAAGlB,IAAlB,CAApB;AACA,UAAI0C,GAAG,GAAGM,SAAS,CAAC/B,MAAD,EAASC,MAAM,GAAGjB,IAAlB,CAAnB;AACA,UAAI,CAACF,QAAL,EAAe0C,IAAI,IAAI,CAAR,CALG,CAKQ;;AAC1B,aAAOA,IAAI,GAAIA,IAAI,GAAGhD,KAAP,GAAeiD,GAAnB,GAA0BA,GAArC;AACD;;AAED,aAAStB,QAAT,CAAkB6B,KAAlB,EAAyB;AACvB,UAAIhC,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,UAAIuB,IAAI,GAAGO,SAAS,CAAC/B,MAAD,EAASC,MAAM,GAAGlB,IAAlB,CAApB;AACA,UAAI0C,GAAG,GAAGM,SAAS,CAAC/B,MAAD,EAASC,MAAM,GAAGjB,IAAlB,CAAnB;AACA,UAAIoC,GAAG,GAAG,EAAV;AACA,UAAIM,IAAI,GAAG,CAAC5C,QAAD,IAAc0C,IAAI,GAAG,UAAhC;;AACA,UAAIE,IAAJ,EAAU;AACRF,QAAAA,IAAI,GAAG,CAACA,IAAR;AACAC,QAAAA,GAAG,GAAGjD,KAAK,GAAGiD,GAAd;AACD;;AACDO,MAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AACA,aAAO,CAAP,EAAU;AACR,YAAIC,GAAG,GAAIT,IAAI,GAAGQ,KAAR,GAAiBxD,KAAjB,GAAyBiD,GAAnC;AACAD,QAAAA,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAGQ,KAAlB,CAAP;AACAP,QAAAA,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWG,GAAG,GAAGD,KAAjB,CAAN;AACAZ,QAAAA,GAAG,GAAG,CAACa,GAAG,GAAGD,KAAP,EAAc7B,QAAd,CAAuB6B,KAAvB,IAAgCZ,GAAtC;AACA,YAAI,CAACI,IAAD,IAAS,CAACC,GAAd,EAAmB;AACpB;;AACD,UAAIC,IAAJ,EAAU;AACRN,QAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,aAAOA,GAAP;AACD;;AAED,aAASD,UAAT,CAAoBnB,MAApB,EAA4BC,MAA5B,EAAoCQ,KAApC,EAA2C;AACzCT,MAAAA,MAAM,CAACC,MAAM,GAAGb,IAAV,CAAN,GAAwBqB,KAAK,GAAG,GAAhC;AACAA,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAT,MAAAA,MAAM,CAACC,MAAM,GAAGd,IAAV,CAAN,GAAwBsB,KAAK,GAAG,GAAhC;AACAA,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAT,MAAAA,MAAM,CAACC,MAAM,GAAGf,IAAV,CAAN,GAAwBuB,KAAK,GAAG,GAAhC;AACAA,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACAT,MAAAA,MAAM,CAACC,MAAM,GAAGhB,IAAV,CAAN,GAAwBwB,KAAK,GAAG,GAAhC;AACD;;AAED,aAASsB,SAAT,CAAmB/B,MAAnB,EAA2BC,MAA3B,EAAmC;AACjC,aAAQD,MAAM,CAACC,MAAM,GAAGhB,IAAV,CAAN,GAAwBR,KAAzB,IACJuB,MAAM,CAACC,MAAM,GAAGf,IAAV,CAAN,IAAyB,EADrB,KAEJc,MAAM,CAACC,MAAM,GAAGd,IAAV,CAAN,IAAyB,CAFrB,IAGLa,MAAM,CAACC,MAAM,GAAGb,IAAV,CAHR;AAID;AACF;;AAED,WAASiB,OAAT,CAAiB6B,GAAjB,EAAsB;AACpB,QAAIlC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACAvB,IAAAA,OAAO,GAAG,IAAV,CAHoB,CAGJ;;AAChB,QAAIwD,GAAG,KAAK,KAAR,IAAiBjC,MAAM,KAAK,CAA5B,IAAiCD,MAAM,CAACuB,MAAP,KAAkB,CAAnD,IAAwDlD,OAAO,CAAC2B,MAAD,CAAnE,EAA6E,OAAOA,MAAP;AAC7E,WAAOc,QAAQ,CAACd,MAAD,EAASC,MAAT,CAAf;AACD;;AAED,WAASK,QAAT,CAAkB4B,GAAlB,EAAuB;AACrB,QAAIlC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACAvB,IAAAA,OAAO,GAAGZ,MAAV;AACA,QAAIoE,GAAG,KAAK,KAAR,IAAiBjC,MAAM,KAAK,CAA5B,IAAiCD,MAAM,CAACuB,MAAP,KAAkB,CAAnD,IAAwDxD,MAAM,CAACoE,QAAP,CAAgBnC,MAAhB,CAA5D,EAAqF,OAAOA,MAAP;AACrF,QAAIoC,IAAI,GAAG,IAAItE,MAAJ,CAAW,CAAX,CAAX;AACAoD,IAAAA,SAAS,CAACkB,IAAD,EAAO,CAAP,EAAUpC,MAAV,EAAkBC,MAAlB,CAAT;AACA,WAAOmC,IAAP;AACD;;AAED,WAAS7B,aAAT,CAAuB2B,GAAvB,EAA4B;AAC1B,QAAIlC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIoC,MAAM,GAAGrC,MAAM,CAACA,MAApB;AACAtB,IAAAA,OAAO,GAAGV,UAAV;AACA,QAAIkE,GAAG,KAAK,KAAR,IAAiBjC,MAAM,KAAK,CAA5B,IAAkCoC,MAAM,YAAYnE,WAApD,IAAoEmE,MAAM,CAACC,UAAP,KAAsB,CAA9F,EAAiG,OAAOD,MAAP;AACjG,QAAID,IAAI,GAAG,IAAIpE,UAAJ,CAAe,CAAf,CAAX;AACAkD,IAAAA,SAAS,CAACkB,IAAD,EAAO,CAAP,EAAUpC,MAAV,EAAkBC,MAAlB,CAAT;AACA,WAAOmC,IAAI,CAACpC,MAAZ;AACD;;AAED,WAASe,aAAT,CAAuBf,MAAvB,EAA+BC,MAA/B,EAAuC;AACrC,QAAIqB,GAAG,GAAGtB,MAAM,IAAIA,MAAM,CAACuB,MAA3B;AACAtB,IAAAA,MAAM,IAAI,CAAV;AACA,WAAOqB,GAAG,IAAKrB,MAAM,GAAG,CAAT,IAAcqB,GAAtB,IAA+B,aAAa,OAAOtB,MAAM,CAACC,MAAD,CAAhE;AACD;;AAED,WAASiB,SAAT,CAAmBqB,OAAnB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD;AACnDF,IAAAA,OAAO,IAAI,CAAX;AACAE,IAAAA,MAAM,IAAI,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BJ,MAAAA,OAAO,CAACC,OAAO,EAAR,CAAP,GAAqBC,MAAM,CAACC,MAAM,EAAP,CAAN,GAAmB,GAAxC;AACD;AACF;;AAED,WAAS5B,QAAT,CAAkBd,MAAlB,EAA0BC,MAA1B,EAAkC;AAChC,WAAO3B,KAAK,CAACuB,SAAN,CAAgB+C,KAAhB,CAAsBC,IAAtB,CAA2B7C,MAA3B,EAAmCC,MAAnC,EAA2CA,MAAM,GAAG,CAApD,CAAP;AACD;;AAED,WAASX,cAAT,CAAwBU,MAAxB,EAAgCC,MAAhC,EAAwCQ,KAAxC,EAA+C;AAC7C,QAAIY,GAAG,GAAGpB,MAAM,GAAG,CAAnB;;AACA,WAAOoB,GAAG,GAAGpB,MAAb,EAAqB;AACnBD,MAAAA,MAAM,CAAC,EAAEqB,GAAH,CAAN,GAAgBZ,KAAK,GAAG,GAAxB;AACAA,MAAAA,KAAK,IAAI,GAAT;AACD;AACF;;AAED,WAAShB,cAAT,CAAwBO,MAAxB,EAAgCC,MAAhC,EAAwCQ,KAAxC,EAA+C;AAC7C,QAAIY,GAAG,GAAGpB,MAAM,GAAG,CAAnB;AACAQ,IAAAA,KAAK;;AACL,WAAOY,GAAG,GAAGpB,MAAb,EAAqB;AACnBD,MAAAA,MAAM,CAAC,EAAEqB,GAAH,CAAN,GAAkB,CAACZ,KAAF,GAAW,GAAZ,GAAmB,GAAnC;AACAA,MAAAA,KAAK,IAAI,GAAT;AACD;AACF;;AAED,WAASlB,cAAT,CAAwBS,MAAxB,EAAgCC,MAAhC,EAAwCQ,KAAxC,EAA+C;AAC7C,QAAIqC,GAAG,GAAG7C,MAAM,GAAG,CAAnB;;AACA,WAAOA,MAAM,GAAG6C,GAAhB,EAAqB;AACnB9C,MAAAA,MAAM,CAACC,MAAM,EAAP,CAAN,GAAmBQ,KAAK,GAAG,GAA3B;AACAA,MAAAA,KAAK,IAAI,GAAT;AACD;AACF;;AAED,WAASf,cAAT,CAAwBM,MAAxB,EAAgCC,MAAhC,EAAwCQ,KAAxC,EAA+C;AAC7C,QAAIqC,GAAG,GAAG7C,MAAM,GAAG,CAAnB;AACAQ,IAAAA,KAAK;;AACL,WAAOR,MAAM,GAAG6C,GAAhB,EAAqB;AACnB9C,MAAAA,MAAM,CAACC,MAAM,EAAP,CAAN,GAAqB,CAACQ,KAAF,GAAW,GAAZ,GAAmB,GAAtC;AACAA,MAAAA,KAAK,IAAI,GAAT;AACD;AACF,GArRgB,CAuRjB;;;AACA,WAASlC,QAAT,CAAkBwE,GAAlB,EAAuB;AACrB,WAAO,CAAC,CAACA,GAAF,IAAS,oBAAoBC,MAAM,CAACnD,SAAP,CAAiBM,QAAjB,CAA0B0C,IAA1B,CAA+BE,GAA/B,CAApC;AACD;AAEF,CA5RA,CA4RC,OAAOnF,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACqF,QAAf,KAA4B,QAA3D,GAAsErF,OAAtE,GAAiF,QAAQ,EA5R1F,CAAD","sourcesContent":["// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n"]},"metadata":{},"sourceType":"script"}