{"ast":null,"code":"var _jsxFileName = \"/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Archive/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { HomeWrapper } from './styled';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport dayjs from 'dayjs';\nimport TableRow from '@mui/material/TableRow';\nimport Fab from '@mui/material/Fab';\nimport { useHistory } from 'react-router-dom';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 100\n}];\n\nconst Archive = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  const getList = async () => {\n    const response = await fetch('http://localhost:3800/all-meeting', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    let resp = await response.json();\n    setData(resp);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  function parseISOString(s) {\n    return dayjs(s).format('YYYY-MM-DD HH:mm');\n  }\n\n  const goToDetail = id => {\n    history.push(`detail/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HomeWrapper, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            maxHeight: 440\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    minWidth: column.minWidth\n                  },\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.map((meeting, index) => {\n                var _meeting$title;\n\n                let date = parseISOString(meeting.date);\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  tabIndex: -1,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: (_meeting$title = meeting.title) !== null && _meeting$title !== void 0 ? _meeting$title : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Fab, {\n                      onClick: () => goToDetail(meeting._id),\n                      color: \"primary\",\n                      \"aria-label\": \"add\",\n                      children: /*#__PURE__*/_jsxDEV(PreviewIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Archive, \"4+gAq8ue/749IKBIaataRmWfsG8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Archive;\nexport default Archive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Archive/index.tsx"],"names":["Grid","React","useState","useEffect","HomeWrapper","Paper","Table","TableBody","TableCell","TableContainer","TableHead","dayjs","TableRow","Fab","useHistory","PreviewIcon","columns","id","label","minWidth","Archive","history","data","setData","getList","response","fetch","headers","resp","json","parseISOString","s","format","goToDetail","push","width","overflow","maxHeight","map","column","meeting","index","date","title","_id"],"mappings":"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","sourcesContent":["import { Grid } from '@mui/material';\nimport React,{useState,useEffect, useRef} from 'react';\nimport {HomeWrapper} from './styled'\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport dayjs from 'dayjs'\nimport TableRow from '@mui/material/TableRow';\n\nimport Fab from '@mui/material/Fab';\nimport {useHistory} from 'react-router-dom'\nimport PreviewIcon from '@mui/icons-material/Preview';\n\n\nconst columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'date', label: 'Date', minWidth: 100 },\n    \n  ];\n\n\nconst Archive:React.FC = () =>{\n    const history = useHistory()\n    const [data,setData] = useState<any[]>([])\n\n    const getList  = async()=>{\n        const response = await fetch('http://localhost:3800/all-meeting', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin':'*'\n            },\n                   \n        });\n        let resp = await response.json()\n        setData(resp)\n    }\n\n    useEffect( ()=>{\n        getList()\n    },[])\n\n    function parseISOString(s:any) {\n        return dayjs(s).format('YYYY-MM-DD HH:mm') ;\n        \n      }\n    const goToDetail = (id:any) =>{\n        history.push(`detail/${id}`)\n    }\n    \n\n    return <HomeWrapper container spacing={2}>\n        <Grid item md={12}>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                        <TableCell >\n                        Action\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        data.map((meeting:any,index:number)=>{\n                            let date = parseISOString( meeting.date)\n                            return  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                                <TableCell >\n                                {   meeting.title ?? 'N/A'}\n                                </TableCell>\n                                <TableCell >\n                                    {date}\n                                </TableCell>\n                                <TableCell >\n                                <Fab onClick={()=>goToDetail(meeting._id)} color=\"primary\" aria-label=\"add\">\n                                    <PreviewIcon />\n                                </Fab>\n                                </TableCell>\n                            </TableRow>\n                        })\n                    }\n                </TableBody>\n                </Table>\n            </TableContainer>\n           \n        </Paper>\n        </Grid>\n\n    </HomeWrapper>\n}\n\nexport default Archive"]},"metadata":{},"sourceType":"module"}