{"ast":null,"code":"var _jsxFileName = \"/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { HomeWrapper } from './styled';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [record, setRecord] = useState(false);\n  const [blob, setBlob] = useState(null);\n  const [text, setText] = useState('');\n  const [newText, setNewText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  useEffect(() => {\n    setNewText(newText + ' ' + text);\n  }, [text]);\n\n  const start = () => {\n    let oldText = text;\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      if (!MediaRecorder.isTypeSupported('audio/webm')) return alert('Not Supported');\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm'\n      });\n      const socket = new WebSocket('wss://api.deepgram.com/v1/listen?punctuate=true&version=latest&profanity_filter=true', ['token', '1347b873378522f6f0bde96d191fb52655d81ca9']);\n\n      socket.onopen = () => {\n        console.log('opened');\n        mediaRecorder.addEventListener('dataavailable', event => {\n          socket.send(event.data);\n        });\n        mediaRecorder.start(100);\n      };\n\n      socket.onmessage = message => {\n        // console.log(message,'message');\n        const data = JSON.parse(message.data);\n        const transcript = data.channel.alternatives[0].transcript;\n\n        if (transcript && data.is_final) {\n          textFormatter(transcript);\n        }\n      };\n    });\n  };\n\n  const textFormatter = newText => {\n    setText(newText);\n  };\n\n  const startRecording = () => {\n    setRecord(true);\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  const onStop = async recordedBlob => {\n    console.log('recordedBlob is: ', recordedBlob); // const base64 =  await covertToBase64(recordedBlob.blob)\n    // console.log(recordedBlob.blob,'====base64');\n\n    var reader = new FileReader();\n    reader.readAsDataURL(recordedBlob.blob);\n\n    reader.onloadend = function () {\n      let base64String = reader.result;\n      setBlob(base64String);\n    };\n  };\n\n  console.log(text, '====rext');\n  useEffect(() => {// navigator.mediaDevices.getUserMedia({audio: true}).then(stream=>{\n    //     if(!MediaRecorder.isTypeSupported('audio/webm')) return alert('Not Supported')\n    //     const mediaRecorder = new MediaRecorder(stream,{mimeType:'audio/webm'})\n    //     const socket = new WebSocket('wss://api.deepgram.com/v1/listen',['token','1347b873378522f6f0bde96d191fb52655d81ca9'])\n    //     socket.onopen = () =>{\n    //         console.log('opened');\n    //         mediaRecorder.addEventListener('dataavailable',event =>{\n    //             socket.send(event.data)\n    //         })\n    //         mediaRecorder.start(250)\n    //     }\n    //     socket.onmessage = message =>{\n    //         // console.log(message,'message');\n    //         const data = JSON.parse(message.data)\n    //         const transcript = data.channel.alternatives[0].transcript\n    //         if(transcript && data.is_final){\n    //             setText(text+transcript)\n    //         }\n    //     }\n    // })\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HomeWrapper, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: \"https://previews.123rf.com/images/katedav/katedav1409/katedav140900264/31993569-%E6%BC%AB%E7%94%BB%E4%BC%9A%E8%AD%B0%E3%81%BE%E3%81%9F%E3%81%AF%E4%BC%9A%E8%AD%B0%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E3%83%A9%E3%82%A6%E3%83%B3%E3%83%89%E3%81%97%E3%81%BE%E3%81%99%E3%80%82.jpg\",\n          alt: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: \"Record New Meeting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Are you going to have a new meeting? Lets record and make a summary to people.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: start,\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: \"https://image.shutterstock.com/image-vector/stickman-illustration-featuring-group-teenage-260nw-683203834.jpg\",\n          alt: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: \"MIssed a meeting?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Let's give you some ideas what happened in last\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Let's go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: newText,\n        onChange: setConvertedText,\n        style: {\n          minHeight: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Home, \"v2tX1jrNPJQnpjhvI6/ZyOs64fQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Home/index.tsx"],"names":["Grid","React","useState","useEffect","HomeWrapper","Card","CardActions","CardContent","CardMedia","Button","Typography","ReactQuill","Home","record","setRecord","blob","setBlob","text","setText","newText","setNewText","convertedText","setConvertedText","start","oldText","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","isTypeSupported","alert","mediaRecorder","mimeType","socket","WebSocket","onopen","console","log","addEventListener","event","send","data","onmessage","message","JSON","parse","transcript","channel","alternatives","is_final","textFormatter","startRecording","stopRecording","onStop","recordedBlob","reader","FileReader","readAsDataURL","onloadend","base64String","result","minHeight"],"mappings":"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","sourcesContent":["import { Grid } from '@mui/material';\nimport React,{useState,useEffect, useRef} from 'react';\nimport { ReactMic } from 'react-mic';\nimport {HomeWrapper} from './styled'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ReactQuill from \"react-quill\"\nimport 'react-quill/dist/quill.snow.css'\nimport Loader from '../../Components/Loader';\n\nconst Home:React.FC = () =>{\n    const [record,setRecord] = useState<boolean>(false)\n    const [blob,setBlob] = useState<any>(null)\n    const [text,setText] = useState<string>('')\n    const [newText, setNewText] = useState('');\n    const [convertedText, setConvertedText] = useState('');\n\n    useEffect(()=>{\n        setNewText(newText+' '+text)\n    },[text])\n    const start = () =>{\n        let oldText = text;\n        navigator.mediaDevices.getUserMedia({audio: true}).then(stream=>{\n            if(!MediaRecorder.isTypeSupported('audio/webm')) return alert('Not Supported')\n            const mediaRecorder = new MediaRecorder(stream,{mimeType:'audio/webm'})\n            const socket = new WebSocket('wss://api.deepgram.com/v1/listen?punctuate=true&version=latest&profanity_filter=true',['token','1347b873378522f6f0bde96d191fb52655d81ca9'])\n            socket.onopen = () =>{\n                console.log('opened');\n                mediaRecorder.addEventListener('dataavailable',event =>{\n                    socket.send(event.data)\n                })\n                mediaRecorder.start(100)\n            }\n            socket.onmessage = message =>{\n                // console.log(message,'message');\n                const data = JSON.parse(message.data)\n                const transcript = data.channel.alternatives[0].transcript\n                if(transcript && data.is_final){\n                    textFormatter(transcript)\n                }\n                \n            }\n            \n        })\n        \n    }\n    const textFormatter = (newText:string) =>{\n        setText(newText)\n    }\n\n    const startRecording = () => {\n        setRecord(true)\n    }\n     \n     const stopRecording = () => {\n        setRecord(false)\n    }\n    const onStop = async (recordedBlob:any) =>{\n        console.log('recordedBlob is: ', recordedBlob);\n        // const base64 =  await covertToBase64(recordedBlob.blob)\n        // console.log(recordedBlob.blob,'====base64');\n        var reader = new FileReader();\n        reader.readAsDataURL(recordedBlob.blob);\n        reader.onloadend = function () {\n            let base64String = reader.result;\n            setBlob(base64String)\n        }\n        \n    }\n\n    console.log(text,'====rext');\n    \n\n    useEffect(()=>{\n        // navigator.mediaDevices.getUserMedia({audio: true}).then(stream=>{\n        //     if(!MediaRecorder.isTypeSupported('audio/webm')) return alert('Not Supported')\n        //     const mediaRecorder = new MediaRecorder(stream,{mimeType:'audio/webm'})\n        //     const socket = new WebSocket('wss://api.deepgram.com/v1/listen',['token','1347b873378522f6f0bde96d191fb52655d81ca9'])\n        //     socket.onopen = () =>{\n        //         console.log('opened');\n        //         mediaRecorder.addEventListener('dataavailable',event =>{\n        //             socket.send(event.data)\n        //         })\n        //         mediaRecorder.start(250)\n        //     }\n        //     socket.onmessage = message =>{\n        //         // console.log(message,'message');\n        //         const data = JSON.parse(message.data)\n        //         const transcript = data.channel.alternatives[0].transcript\n        //         if(transcript && data.is_final){\n        //             setText(text+transcript)\n        //         }\n                \n        //     }\n            \n        // })\n    },[])\n\n    return <HomeWrapper container spacing={2}>\n        {/* <Loader /> */}\n        {/* <ReactMic\n          record={record}\n          className=\"sound-wave\"\n          onStop={onStop}\n          onData={onData}\n          strokeColor=\"#000000\"\n          backgroundColor=\"#FF4081\" />\n        <button onClick={startRecording} type=\"button\">Start</button>\n        <button onClick={stopRecording} type=\"button\">Stop</button> */}\n        <Grid item md={6}>\n            <Card >\n                <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image=\"https://previews.123rf.com/images/katedav/katedav1409/katedav140900264/31993569-%E6%BC%AB%E7%94%BB%E4%BC%9A%E8%AD%B0%E3%81%BE%E3%81%9F%E3%81%AF%E4%BC%9A%E8%AD%B0%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E3%83%A9%E3%82%A6%E3%83%B3%E3%83%89%E3%81%97%E3%81%BE%E3%81%99%E3%80%82.jpg\"\n                    alt=\"green iguana\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        Record New Meeting\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Are you going to have a new meeting? Lets record and make a summary to people.\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" onClick={start}>Start Recording</Button>\n                </CardActions>\n            </Card>\n        </Grid>\n        <Grid item md={6}>\n            <Card >\n                <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image=\"https://image.shutterstock.com/image-vector/stickman-illustration-featuring-group-teenage-260nw-683203834.jpg\"\n                    alt=\"green iguana\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        MIssed a meeting?\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Let's give you some ideas what happened in last\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\">Let's go</Button>\n                </CardActions>\n            </Card>\n        </Grid>\n        <Grid item md={12}>\n        <ReactQuill\n            theme='snow'\n            value={newText}\n            onChange={setConvertedText}\n            style={{minHeight: '300px'}}\n        />    \n        </Grid>\n\n    </HomeWrapper>\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}