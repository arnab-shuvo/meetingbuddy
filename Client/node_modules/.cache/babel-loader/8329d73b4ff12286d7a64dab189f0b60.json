{"ast":null,"code":"import React__default, { Component } from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar styles = {\n  \"recorder_library_box\": \"_1ceqH\",\n  \"recorder_box\": \"_2fG9h\",\n  \"recorder_box_inner\": \"_dt3-T\",\n  \"mic_icon\": \"_1dpop\",\n  \"microphone_icon_sec\": \"_3neb0\",\n  \"mic_icon_svg\": \"_3wi1g\",\n  \"reco_header\": \"_1lB9c\",\n  \"h2\": \"_2N9dq\",\n  \"close_icons\": \"_3-aC9\",\n  \"record_section\": \"_3bC73\",\n  \"duration_section\": \"_1YOWG\",\n  \"btn_wrapper\": \"_1Yplu\",\n  \"btn\": \"_1Pz2d\",\n  \"clear_btn\": \"_2gd2_\",\n  \"upload_btn\": \"_37kfa\",\n  \"duration\": \"_f2DT8\",\n  \"recorder_page_box\": \"_17RTH\",\n  \"help\": \"_eV_dK\",\n  \"record_controller\": \"_qxztz\",\n  \"icons\": \"_2uz65\",\n  \"stop\": \"_1bSom\",\n  \"pause\": \"_3nQu5\",\n  \"play_icons\": \"_3O0Io\",\n  \"pause_icons\": \"_2ACrw\",\n  \"stop_icon\": \"_oEOY-\"\n};\nvar audioType = 'audio/*';\n\nvar Recorder = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Recorder, _Component);\n\n  function Recorder(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Recorder.prototype;\n\n  _proto.handleAudioPause = function handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({\n      pauseRecord: true\n    });\n  };\n\n  _proto.handleAudioStart = function handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({\n      pauseRecord: false\n    });\n  };\n\n  _proto.startTimer = function startTimer() {\n    this.timer = setInterval(this.countDown, 100);\n  };\n\n  _proto.countDown = function countDown() {\n    var _this2 = this;\n\n    this.setState(function (prevState) {\n      var miliseconds = prevState.miliseconds + 100;\n      return {\n        time: _this2.milisecondsToTime(miliseconds),\n        miliseconds: miliseconds\n      };\n    });\n\n    if (this.props.handleCountDown) {\n      this.props.handleCountDown(this.state.time);\n    }\n  };\n\n  _proto.milisecondsToTime = function milisecondsToTime(milisecs) {\n    var secs = milisecs / 1000;\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  };\n\n  _proto.initRecorder = function initRecorder() {\n    try {\n      var _this4 = this;\n\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n      var _temp2 = function () {\n        if (navigator.mediaDevices) {\n          return Promise.resolve(navigator.mediaDevices.getUserMedia({\n            audio: true\n          })).then(function (stream) {\n            if (_this4.props.mimeTypeToUseWhenRecording) {\n              _this4.mediaRecorder = new MediaRecorder(stream, {\n                mimeType: _this4.props.mimeTypeToUseWhenRecording\n              });\n            } else {\n              _this4.mediaRecorder = new MediaRecorder(stream);\n            }\n\n            _this4.chunks = [];\n\n            _this4.mediaRecorder.ondataavailable = function (e) {\n              if (e.data && e.data.size > 0) {\n                _this4.chunks.push(e.data);\n              }\n            };\n\n            _this4.stream = stream;\n          });\n        } else {\n          _this4.setState({\n            medianotFound: true\n          });\n\n          console.log('Media Decives will work only with SSL.....');\n        }\n      }();\n\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startRecording = function startRecording(e) {\n    try {\n      var _this6 = this;\n\n      e.preventDefault();\n      _this6.chunks = [];\n      return Promise.resolve(_this6.initRecorder()).then(function () {\n        _this6.mediaRecorder.start(10);\n\n        _this6.startTimer();\n\n        _this6.setState({\n          recording: true\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.stopRecording = function stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({\n      time: {}\n    });\n    e.preventDefault();\n\n    if (this.stream.getAudioTracks) {\n      var tracks = this.stream.getAudioTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found');\n    }\n\n    this.mediaRecorder.stop();\n    this.setState({\n      recording: false,\n      pauseRecord: false\n    });\n    this.saveAudio();\n  };\n\n  _proto.handleReset = function handleReset(e) {\n    var _this7 = this;\n\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, function () {\n      _this7.props.handleReset(_this7.state);\n    });\n  };\n\n  _proto.saveAudio = function saveAudio() {\n    var blob = new Blob(this.chunks, {\n      type: audioType\n    });\n    var audioURL = window.URL.createObjectURL(blob);\n    var audios = [audioURL];\n    this.setState({\n      audios: audios,\n      audioBlob: blob\n    });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  };\n\n  _proto.render = function render() {\n    var _this8 = this;\n\n    var _this$state = this.state,\n        recording = _this$state.recording,\n        audios = _this$state.audios,\n        time = _this$state.time,\n        medianotFound = _this$state.medianotFound,\n        pauseRecord = _this$state.pauseRecord;\n    var _this$props = this.props,\n        showUIAudio = _this$props.showUIAudio,\n        title = _this$props.title,\n        audioURL = _this$props.audioURL,\n        disableFullUI = _this$props.disableFullUI;\n\n    if (disableFullUI) {\n      return null;\n    }\n\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_library_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box_inner\n    }, !this.props.hideHeader ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.reco_header\n    }, /*#__PURE__*/React__default.createElement(\"h2\", {\n      className: styles.h2\n    }, title), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.close_icons\n    })) : null, !medianotFound ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.btn_wrapper\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick() {\n        return _this8.props.handleAudioUpload(_this8.state.audioBlob);\n      },\n      className: styles.btn + \" \" + styles.upload_btn,\n      disabled: this.props.uploadButtonDisabled\n    }, \"Upload\"), /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick(e) {\n        return _this8.handleReset(e);\n      },\n      className: styles.btn + \" \" + styles.clear_btn\n    }, \"Clear\")), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.audio_section\n    }, audioURL !== null && showUIAudio ? /*#__PURE__*/React__default.createElement(\"audio\", {\n      controls: true\n    }, /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/ogg\"\n    }), /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/mpeg\"\n    })) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.mins\n    }, time.m !== undefined ? \"\" + (time.m <= 9 ? '0' + time.m : time.m) : '00'), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.divider\n    }, \":\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.secs\n    }, time.s !== undefined ? \"\" + (time.s <= 9 ? '0' + time.s : time.s) : '00')), !recording ? /*#__PURE__*/React__default.createElement(\"p\", {\n      className: styles.help\n    }, \"Press the microphone to record\") : null), !recording ? /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.startRecording(e);\n      },\n      href: \" #\",\n      className: styles.mic_icon\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.microphone_icon_sec\n    }, /*#__PURE__*/React__default.createElement(\"svg\", {\n      className: styles.mic_icon_svg,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 1000 1000\",\n      enableBackground: \"new 0 0 1000 1000\"\n    }, /*#__PURE__*/React__default.createElement(\"g\", null, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\"\n    }))))) : /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_controller\n    }, /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.stopRecording(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.stop\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.stop_icon\n    })), /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: !pauseRecord ? function (e) {\n        return _this8.handleAudioPause(e);\n      } : function (e) {\n        return _this8.handleAudioStart(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.pause\n    }, pauseRecord ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.play_icons\n    }) : /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.pause_icons\n    })))) : /*#__PURE__*/React__default.createElement(\"p\", {\n      style: {\n        color: '#fff',\n        marginTop: 30,\n        fontSize: 25\n      }\n    }, \"Seems the site is Non-SSL\"))));\n  };\n\n  return Recorder;\n}(Component);\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: function handleCountDown(data) {}\n};\nexport { Recorder };","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/node_modules/react-voice-recorder/src/components/Recorder.js"],"names":["audioType","Recorder","Component","time","miliseconds","recording","medianotFound","audios","audioBlob","stream","handleAudioPause","e","clearInterval","pauseRecord","handleAudioStart","startTimer","setInterval","countDown","prevState","milisecondsToTime","secs","milisecs","hours","Math","divisor_for_minutes","minutes","divisor_for_seconds","seconds","obj","h","m","s","ms","initRecorder","navigator","audio","mimeType","mimeTypeToUseWhenRecording","console","startRecording","stopRecording","tracks","track","handleReset","saveAudio","blob","type","audioURL","window","url","chunks","duration","render","showUIAudio","title","disableFullUI","styles","recorder_library_box","recorder_box","recorder_box_inner","reco_header","h2","close_icons","record_section","btn_wrapper","uploadButtonDisabled","clear_btn","duration_section","audio_section","mins","divider","help","mic_icon","microphone_icon_sec","record_controller","stop","stop_icon","pause","play_icons","pause_icons","color","marginTop","fontSize","hideHeader","handleCountDown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = 'audio/*';\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    // if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 100);\n    // }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n\n    this.setState(prevState => {\n      const miliseconds = prevState.miliseconds + 100;\n      return ({ time: this.milisecondsToTime(miliseconds), miliseconds: miliseconds });\n    });\n    \n    if(this.props.handleCountDown){\n      this.props.handleCountDown(this.state.time);\n    }\n    \n  }\n\n  milisecondsToTime(milisecs) {\n\n    let secs = milisecs / 1000;\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  }\n\n  async initRecorder() {\n    navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      if (this.props.mimeTypeToUseWhenRecording) {\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: this.props.mimeTypeToUseWhenRecording });\n      } else {\n        this.mediaRecorder = new MediaRecorder(stream);\n      }\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.stream = stream;\n    } else {\n      this.setState({ medianotFound: true });\n      console.log('Media Decives will work only with SSL.....');\n    }\n  }\n\n  async startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n\n    await this.initRecorder();\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n\n    if (this.stream.getAudioTracks) {\n      const tracks = this.stream.getAudioTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found')\n    }\n\n    this.mediaRecorder.stop();\n\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL, disableFullUI } = this.props;\n\n    if (disableFullUI) { return null; }\n\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {\n              !this.props.hideHeader ?\n                <div className={styles.reco_header}>\n                  <h2 className={styles.h2}>{title}</h2>\n                  <span className={styles.close_icons}>\n                  </span>\n                </div> :\n                null\n            }\n            {\n              !medianotFound ?\n                (\n                  <div className={styles.record_section}>\n                    <div className={styles.btn_wrapper}>\n                      <button\n                        onClick={\n                          () =>\n                            this.props.handleAudioUpload(this.state.audioBlob)\n                        }\n                        className={`${styles.btn} ${styles.upload_btn}`}\n                        disabled={this.props.uploadButtonDisabled}\n                      >\n                    Upload\n                      </button>\n                      <button\n                        onClick={(e) => this.handleReset(e)}\n                        className={`${styles.btn} ${styles.clear_btn}`}\n                      >\n                    Clear\n                      </button>\n                    </div>\n                    <div className={styles.duration_section}>\n                      <div className={styles.audio_section}>\n                        {\n                          audioURL !== null && showUIAudio ?\n                            (\n                              <audio controls>\n                                <source src={audios[0]} type='audio/ogg' />\n                                <source src={audios[0]} type='audio/mpeg' />\n                              </audio>\n                            ) :\n                            null\n                        }\n                      </div>\n                      <div className={styles.duration}>\n                        <span className={styles.mins}>\n                          {\n                            time.m !== undefined ?\n                              `${time.m <= 9 ? '0' + time.m : time.m}` :\n                              '00'\n                          }\n                        </span>\n                        <span className={styles.divider}>:</span>\n                        <span className={styles.secs}>\n                          {\n                            time.s !== undefined ?\n                              `${time.s <= 9 ? '0' + time.s : time.s}` :\n                              '00'\n                          }\n                        </span>\n                      </div>\n                      {\n                        !recording ?\n                          (\n                            <p className={styles.help}>Press the microphone to record</p>\n                          ) :\n                          null\n                      }\n                    </div>\n                    {\n                      !recording ?\n                        (\n                          <a\n                            onClick={e => this.startRecording(e)}\n                            href=' #'\n                            className={styles.mic_icon}\n                          >\n                            {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                            <span className={styles.microphone_icon_sec}>\n                              <svg className={styles.mic_icon_svg} version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enableBackground='new 0 0 1000 1000' >\n                                <g>\n                                  <path d='M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z' />\n                                </g>\n                              </svg>\n\n                            </span>\n                          </a>\n                        ) :\n                        (\n                          <div className={styles.record_controller}>\n                            <a\n                              onClick={e => this.stopRecording(e)}\n                              href=' #'\n                              className={`${styles.icons} ${styles.stop}`}\n                            >\n                              <span className={styles.stop_icon}></span>\n                              {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                              {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                            </a>\n                            <a\n                              onClick={\n                                !pauseRecord ?\n                                  e => this.handleAudioPause(e) :\n                                  e => this.handleAudioStart(e)\n                              }\n                              href=' #'\n                              className={`${styles.icons} ${styles.pause}`}\n                            >\n                              {\n                                pauseRecord ?\n                                  <span className={styles.play_icons}></span> :\n                                  <span className={styles.pause_icons}></span>\n                              }\n                            </a>\n                          </div>\n                        )\n                    }\n                  </div>\n                ) :\n                (\n                  <p style={{ color: '#fff', marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                  </p>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: (data) => {},\n}\n"]},"metadata":{},"sourceType":"module"}