{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tools_1 = require(\"./tools\");\n\nvar int64_buffer_1 = require(\"int64-buffer\");\n\nvar tools = require(\"./tools\");\n\nvar schema = require(\"matroska/lib/schema\");\n\nvar byEbmlID = schema.byEbmlID; // https://www.matroska.org/technical/specs/index.html\n\nvar State;\n\n(function (State) {\n  State[State[\"STATE_TAG\"] = 1] = \"STATE_TAG\";\n  State[State[\"STATE_SIZE\"] = 2] = \"STATE_SIZE\";\n  State[State[\"STATE_CONTENT\"] = 3] = \"STATE_CONTENT\";\n})(State || (State = {}));\n\nvar EBMLDecoder = function () {\n  function EBMLDecoder() {\n    this._buffer = new tools_1.Buffer(0);\n    this._tag_stack = [];\n    this._state = State.STATE_TAG;\n    this._cursor = 0;\n    this._total = 0;\n    this._schema = byEbmlID;\n    this._result = [];\n  }\n\n  EBMLDecoder.prototype.decode = function (chunk) {\n    this.readChunk(chunk);\n    var diff = this._result;\n    this._result = [];\n    return diff;\n  };\n\n  EBMLDecoder.prototype.readChunk = function (chunk) {\n    // 読みかけの(読めなかった) this._buffer と 新しい chunk を合わせて読み直す\n    this._buffer = tools.concat([this._buffer, new tools_1.Buffer(chunk)]);\n\n    while (this._cursor < this._buffer.length) {\n      // console.log(this._cursor, this._total, this._tag_stack);\n      if (this._state === State.STATE_TAG && !this.readTag()) {\n        break;\n      }\n\n      if (this._state === State.STATE_SIZE && !this.readSize()) {\n        break;\n      }\n\n      if (this._state === State.STATE_CONTENT && !this.readContent()) {\n        break;\n      }\n    }\n  };\n\n  EBMLDecoder.prototype.getSchemaInfo = function (tagNum) {\n    return this._schema[tagNum] || {\n      name: \"unknown\",\n      level: -1,\n      type: \"unknown\",\n      description: \"unknown\"\n    };\n  };\n  /**\n   * vint された parsing tag\n   * @return - return false when waiting for more data\n   */\n\n\n  EBMLDecoder.prototype.readTag = function () {\n    // tag.length が buffer の外にある\n    if (this._cursor >= this._buffer.length) {\n      return false;\n    } // read ebml id vint without first byte\n\n\n    var tag = tools_1.readVint(this._buffer, this._cursor); // tag が読めなかった\n\n    if (tag == null) {\n      return false;\n    } // >>>>>>>>>\n    // tag 識別子\n    //const tagStr = this._buffer.toString(\"hex\", this._cursor, this._cursor + tag.length);\n    //const tagNum = parseInt(tagStr, 16);\n    // 上と等価\n\n\n    var buf = this._buffer.slice(this._cursor, this._cursor + tag.length);\n\n    var tagNum = buf.reduce(function (o, v, i, arr) {\n      return o + v * Math.pow(16, 2 * (arr.length - 1 - i));\n    }, 0);\n    var schema = this.getSchemaInfo(tagNum);\n    var tagObj = {\n      EBML_ID: tagNum.toString(16),\n      schema: schema,\n      type: schema.type,\n      name: schema.name,\n      level: schema.level,\n      tagStart: this._total,\n      tagEnd: this._total + tag.length,\n      sizeStart: this._total + tag.length,\n      sizeEnd: null,\n      dataStart: null,\n      dataEnd: null,\n      dataSize: null,\n      data: null\n    }; // | tag: vint | size: vint | data: Buffer(size) |\n\n    this._tag_stack.push(tagObj); // <<<<<<<<\n    // ポインタを進める\n\n\n    this._cursor += tag.length;\n    this._total += tag.length; // 読み込み状態変更\n\n    this._state = State.STATE_SIZE;\n    return true;\n  };\n  /**\n   * vint された現在のタグの内容の大きさを読み込む\n   * @return - return false when waiting for more data\n   */\n\n\n  EBMLDecoder.prototype.readSize = function () {\n    // tag.length が buffer の外にある\n    if (this._cursor >= this._buffer.length) {\n      return false;\n    } // read ebml datasize vint without first byte\n\n\n    var size = tools_1.readVint(this._buffer, this._cursor); // まだ読めない\n\n    if (size == null) {\n      return false;\n    } // >>>>>>>>>\n    // current tag の data size 決定\n\n\n    var tagObj = this._tag_stack[this._tag_stack.length - 1];\n    tagObj.sizeEnd = tagObj.sizeStart + size.length;\n    tagObj.dataStart = tagObj.sizeEnd;\n    tagObj.dataSize = size.value;\n\n    if (size.value === -1) {\n      // unknown size\n      tagObj.dataEnd = -1;\n\n      if (tagObj.type === \"m\") {\n        tagObj.unknownSize = true;\n      }\n    } else {\n      tagObj.dataEnd = tagObj.sizeEnd + size.value;\n    } // <<<<<<<<\n    // ポインタを進める\n\n\n    this._cursor += size.length;\n    this._total += size.length;\n    this._state = State.STATE_CONTENT;\n    return true;\n  };\n  /**\n   * データ読み込み\n   */\n\n\n  EBMLDecoder.prototype.readContent = function () {\n    var tagObj = this._tag_stack[this._tag_stack.length - 1]; // master element は子要素を持つので生データはない\n\n    if (tagObj.type === 'm') {\n      // console.log('content should be tags');\n      tagObj.isEnd = false;\n\n      this._result.push(tagObj);\n\n      this._state = State.STATE_TAG; // この Mastert Element は空要素か\n\n      if (tagObj.dataSize === 0) {\n        // 即座に終了タグを追加\n        var elm = Object.assign({}, tagObj, {\n          isEnd: true\n        });\n\n        this._result.push(elm);\n\n        this._tag_stack.pop(); // スタックからこのタグを捨てる\n\n      }\n\n      return true;\n    } // waiting for more data\n\n\n    if (this._buffer.length < this._cursor + tagObj.dataSize) {\n      return false;\n    } // タグの中身の生データ\n\n\n    var data = this._buffer.slice(this._cursor, this._cursor + tagObj.dataSize); // 読み終わったバッファを捨てて読み込んでいる部分のバッファのみ残す\n\n\n    this._buffer = this._buffer.slice(this._cursor + tagObj.dataSize);\n    tagObj.data = data; // >>>>>>>>>\n\n    switch (tagObj.type) {\n      //case \"m\": break;\n      // Master-Element - contains other EBML sub-elements of the next lower level\n      case \"u\":\n        tagObj.value = data.readUIntBE(0, data.length);\n        break;\n      // Unsigned Integer - Big-endian, any size from 1 to 8 octets\n\n      case \"i\":\n        tagObj.value = data.readIntBE(0, data.length);\n        break;\n      // Signed Integer - Big-endian, any size from 1 to 8 octets\n\n      case \"f\":\n        tagObj.value = tagObj.dataSize === 4 ? data.readFloatBE(0) : tagObj.dataSize === 8 ? data.readDoubleBE(0) : (console.warn(\"cannot read \" + tagObj.dataSize + \" octets float. failback to 0\"), 0);\n        break;\n      // Float - Big-endian, defined for 4 and 8 octets (32, 64 bits)\n\n      case \"s\":\n        tagObj.value = data.toString(\"ascii\");\n        break;\n      // ascii\n      //  Printable ASCII (0x20 to 0x7E), zero-padded when needed\n\n      case \"8\":\n        tagObj.value = data.toString(\"utf8\");\n        break;\n      //  Unicode string, zero padded when needed (RFC 2279)\n\n      case \"b\":\n        tagObj.value = data;\n        break;\n      // Binary - not interpreted by the parser\n\n      case \"d\":\n        tagObj.value = tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber());\n        break;\n    }\n\n    if (tagObj.value === null) {\n      throw new Error(\"unknown tag type:\" + tagObj.type);\n    }\n\n    this._result.push(tagObj); // <<<<<<<<\n    // ポインタを進める\n\n\n    this._total += tagObj.dataSize; // タグ待ちモードに変更\n\n    this._state = State.STATE_TAG;\n    this._cursor = 0;\n\n    this._tag_stack.pop(); // remove the object from the stack\n\n\n    while (this._tag_stack.length > 0) {\n      var topEle = this._tag_stack[this._tag_stack.length - 1]; // 親が不定長サイズなので閉じタグは期待できない\n\n      if (topEle.dataEnd < 0) {\n        this._tag_stack.pop(); // 親タグを捨てる\n\n\n        return true;\n      } // 閉じタグの来るべき場所まで来たかどうか\n\n\n      if (this._total < topEle.dataEnd) {\n        break;\n      } // 閉じタグを挿入すべきタイミングが来た\n\n\n      if (topEle.type !== \"m\") {\n        throw new Error(\"parent element is not master element\");\n      }\n\n      var elm = Object.assign({}, topEle, {\n        isEnd: true\n      });\n\n      this._result.push(elm);\n\n      this._tag_stack.pop();\n    }\n\n    return true;\n  };\n\n  return EBMLDecoder;\n}();\n\nexports.default = EBMLDecoder;","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/node_modules/ts-ebml/lib/EBMLDecoder.js"],"names":["Object","defineProperty","exports","value","tools_1","require","int64_buffer_1","tools","schema","byEbmlID","State","EBMLDecoder","_buffer","Buffer","_tag_stack","_state","STATE_TAG","_cursor","_total","_schema","_result","prototype","decode","chunk","readChunk","diff","concat","length","readTag","STATE_SIZE","readSize","STATE_CONTENT","readContent","getSchemaInfo","tagNum","name","level","type","description","tag","readVint","buf","slice","reduce","o","v","i","arr","Math","pow","tagObj","EBML_ID","toString","tagStart","tagEnd","sizeStart","sizeEnd","dataStart","dataEnd","dataSize","data","push","size","unknownSize","isEnd","elm","assign","pop","readUIntBE","readIntBE","readFloatBE","readDoubleBE","console","warn","convertEBMLDateToJSDate","Int64BE","toNumber","Error","topEle","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tools_1 = require(\"./tools\");\nvar int64_buffer_1 = require(\"int64-buffer\");\nvar tools = require(\"./tools\");\nvar schema = require(\"matroska/lib/schema\");\nvar byEbmlID = schema.byEbmlID;\n// https://www.matroska.org/technical/specs/index.html\nvar State;\n(function (State) {\n    State[State[\"STATE_TAG\"] = 1] = \"STATE_TAG\";\n    State[State[\"STATE_SIZE\"] = 2] = \"STATE_SIZE\";\n    State[State[\"STATE_CONTENT\"] = 3] = \"STATE_CONTENT\";\n})(State || (State = {}));\nvar EBMLDecoder = (function () {\n    function EBMLDecoder() {\n        this._buffer = new tools_1.Buffer(0);\n        this._tag_stack = [];\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._total = 0;\n        this._schema = byEbmlID;\n        this._result = [];\n    }\n    EBMLDecoder.prototype.decode = function (chunk) {\n        this.readChunk(chunk);\n        var diff = this._result;\n        this._result = [];\n        return diff;\n    };\n    EBMLDecoder.prototype.readChunk = function (chunk) {\n        // 読みかけの(読めなかった) this._buffer と 新しい chunk を合わせて読み直す\n        this._buffer = tools.concat([this._buffer, new tools_1.Buffer(chunk)]);\n        while (this._cursor < this._buffer.length) {\n            // console.log(this._cursor, this._total, this._tag_stack);\n            if (this._state === State.STATE_TAG && !this.readTag()) {\n                break;\n            }\n            if (this._state === State.STATE_SIZE && !this.readSize()) {\n                break;\n            }\n            if (this._state === State.STATE_CONTENT && !this.readContent()) {\n                break;\n            }\n        }\n    };\n    EBMLDecoder.prototype.getSchemaInfo = function (tagNum) {\n        return this._schema[tagNum] || {\n            name: \"unknown\",\n            level: -1,\n            type: \"unknown\",\n            description: \"unknown\"\n        };\n    };\n    /**\n     * vint された parsing tag\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readTag = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml id vint without first byte\n        var tag = tools_1.readVint(this._buffer, this._cursor);\n        // tag が読めなかった\n        if (tag == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // tag 識別子\n        //const tagStr = this._buffer.toString(\"hex\", this._cursor, this._cursor + tag.length);\n        //const tagNum = parseInt(tagStr, 16);\n        // 上と等価\n        var buf = this._buffer.slice(this._cursor, this._cursor + tag.length);\n        var tagNum = buf.reduce(function (o, v, i, arr) { return o + v * Math.pow(16, 2 * (arr.length - 1 - i)); }, 0);\n        var schema = this.getSchemaInfo(tagNum);\n        var tagObj = {\n            EBML_ID: tagNum.toString(16),\n            schema: schema,\n            type: schema.type,\n            name: schema.name,\n            level: schema.level,\n            tagStart: this._total,\n            tagEnd: this._total + tag.length,\n            sizeStart: this._total + tag.length,\n            sizeEnd: null,\n            dataStart: null,\n            dataEnd: null,\n            dataSize: null,\n            data: null\n        };\n        // | tag: vint | size: vint | data: Buffer(size) |\n        this._tag_stack.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += tag.length;\n        this._total += tag.length;\n        // 読み込み状態変更\n        this._state = State.STATE_SIZE;\n        return true;\n    };\n    /**\n     * vint された現在のタグの内容の大きさを読み込む\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readSize = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml datasize vint without first byte\n        var size = tools_1.readVint(this._buffer, this._cursor);\n        // まだ読めない\n        if (size == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // current tag の data size 決定\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        tagObj.sizeEnd = tagObj.sizeStart + size.length;\n        tagObj.dataStart = tagObj.sizeEnd;\n        tagObj.dataSize = size.value;\n        if (size.value === -1) {\n            // unknown size\n            tagObj.dataEnd = -1;\n            if (tagObj.type === \"m\") {\n                tagObj.unknownSize = true;\n            }\n        }\n        else {\n            tagObj.dataEnd = tagObj.sizeEnd + size.value;\n        }\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += size.length;\n        this._total += size.length;\n        this._state = State.STATE_CONTENT;\n        return true;\n    };\n    /**\n     * データ読み込み\n     */\n    EBMLDecoder.prototype.readContent = function () {\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        // master element は子要素を持つので生データはない\n        if (tagObj.type === 'm') {\n            // console.log('content should be tags');\n            tagObj.isEnd = false;\n            this._result.push(tagObj);\n            this._state = State.STATE_TAG;\n            // この Mastert Element は空要素か\n            if (tagObj.dataSize === 0) {\n                // 即座に終了タグを追加\n                var elm = Object.assign({}, tagObj, { isEnd: true });\n                this._result.push(elm);\n                this._tag_stack.pop(); // スタックからこのタグを捨てる\n            }\n            return true;\n        }\n        // waiting for more data\n        if (this._buffer.length < this._cursor + tagObj.dataSize) {\n            return false;\n        }\n        // タグの中身の生データ\n        var data = this._buffer.slice(this._cursor, this._cursor + tagObj.dataSize);\n        // 読み終わったバッファを捨てて読み込んでいる部分のバッファのみ残す\n        this._buffer = this._buffer.slice(this._cursor + tagObj.dataSize);\n        tagObj.data = data;\n        // >>>>>>>>>\n        switch (tagObj.type) {\n            //case \"m\": break;\n            // Master-Element - contains other EBML sub-elements of the next lower level\n            case \"u\":\n                tagObj.value = data.readUIntBE(0, data.length);\n                break;\n            // Unsigned Integer - Big-endian, any size from 1 to 8 octets\n            case \"i\":\n                tagObj.value = data.readIntBE(0, data.length);\n                break;\n            // Signed Integer - Big-endian, any size from 1 to 8 octets\n            case \"f\":\n                tagObj.value = tagObj.dataSize === 4 ? data.readFloatBE(0) :\n                    tagObj.dataSize === 8 ? data.readDoubleBE(0) :\n                        (console.warn(\"cannot read \" + tagObj.dataSize + \" octets float. failback to 0\"), 0);\n                break;\n            // Float - Big-endian, defined for 4 and 8 octets (32, 64 bits)\n            case \"s\":\n                tagObj.value = data.toString(\"ascii\");\n                break; // ascii\n            //  Printable ASCII (0x20 to 0x7E), zero-padded when needed\n            case \"8\":\n                tagObj.value = data.toString(\"utf8\");\n                break;\n            //  Unicode string, zero padded when needed (RFC 2279)\n            case \"b\":\n                tagObj.value = data;\n                break;\n            // Binary - not interpreted by the parser\n            case \"d\":\n                tagObj.value = tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber());\n                break;\n        }\n        if (tagObj.value === null) {\n            throw new Error(\"unknown tag type:\" + tagObj.type);\n        }\n        this._result.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._total += tagObj.dataSize;\n        // タグ待ちモードに変更\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._tag_stack.pop(); // remove the object from the stack\n        while (this._tag_stack.length > 0) {\n            var topEle = this._tag_stack[this._tag_stack.length - 1];\n            // 親が不定長サイズなので閉じタグは期待できない\n            if (topEle.dataEnd < 0) {\n                this._tag_stack.pop(); // 親タグを捨てる\n                return true;\n            }\n            // 閉じタグの来るべき場所まで来たかどうか\n            if (this._total < topEle.dataEnd) {\n                break;\n            }\n            // 閉じタグを挿入すべきタイミングが来た\n            if (topEle.type !== \"m\") {\n                throw new Error(\"parent element is not master element\");\n            }\n            var elm = Object.assign({}, topEle, { isEnd: true });\n            this._result.push(elm);\n            this._tag_stack.pop();\n        }\n        return true;\n    };\n    return EBMLDecoder;\n}());\nexports.default = EBMLDecoder;\n"]},"metadata":{},"sourceType":"script"}