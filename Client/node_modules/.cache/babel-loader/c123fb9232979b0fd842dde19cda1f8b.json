{"ast":null,"code":"var _jsxFileName = \"/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ReactMediaRecorder, useReactMediaRecorder } from \"react-media-recorder\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    video: true\n  });\n  const [start, setStart] = useState(false);\n  const [blob, setBlob] = useState('');\n\n  const recordStart = () => {\n    setStart(true);\n  };\n\n  const recordStop = () => {\n    setStart(false);\n  };\n\n  console.log(mediaBlobUrl, '===mediaBlobUrl');\n\n  const blobToBase64 = async blob => {\n    console.log(blob, 'blob');\n    const mediaBlob = await fetch(blob).then(response => response.blob());\n    console.log(mediaBlob, '===mediaBlob');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [start && /*#__PURE__*/_jsxDEV(Webcam, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(ReactMediaRecorder, {\n      video: true,\n      render: _ref => {\n        let {\n          status,\n          startRecording,\n          stopRecording,\n          mediaBlobUrl\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              recordStart();\n              startRecording();\n            },\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setBlob(mediaBlobUrl);\n              blobToBase64(mediaBlobUrl);\n              recordStop();\n              stopRecording();\n            },\n            children: \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), !start && /*#__PURE__*/_jsxDEV(\"video\", {\n            src: mediaBlobUrl !== null && mediaBlobUrl !== void 0 ? mediaBlobUrl : '',\n            controls: true,\n            autoPlay: true,\n            loop: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"SRmBdzg1M1NxMaarnHgVBlzEyk4=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/arnabdhar/Desktop/meetingbuddy/src/Pages/Home/index.tsx"],"names":["React","useState","ReactMediaRecorder","useReactMediaRecorder","Webcam","Home","status","startRecording","stopRecording","mediaBlobUrl","video","start","setStart","blob","setBlob","recordStart","recordStop","console","log","blobToBase64","mediaBlob","fetch","then","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,sBAAzD;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,MAAMC,IAAa,GAAG,MAAK;AAAA;;AACvB,QAAM;AACFC,IAAAA,MADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKAN,qBAAqB,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD,CAL3B;AAMA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAU,KAAV,CAAjC;AACA,QAAM,CAACY,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAM,EAAN,CAA/B;;AACA,QAAMc,WAAW,GAAG,MAAK;AACrBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAK;AACpBJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAFD;;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ,EAAyB,iBAAzB;;AAGA,QAAMU,YAAY,GAAG,MAAON,IAAP,IAAmB;AACpCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAiB,MAAjB;AAEA,UAAMO,SAAS,GAAG,MAAMC,KAAK,CAACR,IAAD,CAAL,CAAYS,IAAZ,CAAiBC,QAAQ,IAAIA,QAAQ,CAACV,IAAT,EAA7B,CAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ,EAAsB,cAAtB;AAGH,GAPD;;AAUA,sBAAM;AAAA,eAEFT,KAAK,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFP,eAIF,QAAC,kBAAD;AACF,MAAA,KAAK,MADH;AAEF,MAAA,MAAM,EAAE;AAAA,YAAC;AAAEL,UAAAA,MAAF;AAAUC,UAAAA,cAAV;AAA0BC,UAAAA,aAA1B;AAAyCC,UAAAA;AAAzC,SAAD;AAAA,4BACN;AAAA,kCACE;AAAA,sBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,MAAI;AACjBS,cAAAA,WAAW;AACXR,cAAAA,cAAc;AACjB,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAQ,YAAA,OAAO,EAAE,MAAI;AACjBO,cAAAA,OAAO,CAACL,YAAD,CAAP;AACAU,cAAAA,YAAY,CAACV,YAAD,CAAZ;AACAO,cAAAA,UAAU;AACVR,cAAAA,aAAa;AAChB,aALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAaA,CAACG,KAAD,iBAAU;AAAO,YAAA,GAAG,EAAEF,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAgB,EAA1B;AAA8B,YAAA,QAAQ,MAAtC;AAAuC,YAAA,QAAQ,MAA/C;AAAgD,YAAA,IAAI;AAApD;AAAA;AAAA;AAAA;AAAA,kBAbV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA,kBAAN;AA2BH,CAvDD;;GAAMJ,I;UAMIF,qB;;;KANJE,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react';\nimport { ReactMediaRecorder ,useReactMediaRecorder} from \"react-media-recorder\";\nimport Webcam from \"react-webcam\";\n\nconst Home:React.FC = () =>{\n    const {\n        status,\n        startRecording,\n        stopRecording,\n        mediaBlobUrl,\n      } = useReactMediaRecorder({ video: true });\n    const [start,setStart] = useState<Boolean>(false)\n    const [blob,setBlob] = useState<any>('')\n    const recordStart = () =>{\n        setStart(true)\n    }\n    const recordStop = () =>{\n        setStart(false)\n    }\n    console.log(mediaBlobUrl,'===mediaBlobUrl');\n    \n\n    const blobToBase64 = async (blob:any) =>{\n        console.log(blob,'blob');\n        \n        const mediaBlob = await fetch(blob).then(response => response.blob());\n        console.log(mediaBlob,'===mediaBlob');\n        \n        \n    };\n\n    \n    return<>\n    {\n        start && <Webcam />\n    }\n        <ReactMediaRecorder\n      video\n      render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n        <div>\n          <p>{status}</p>\n          <button onClick={()=>{\n              recordStart()\n              startRecording()\n          }}>Start Recording</button>\n          <button onClick={()=>{\n              setBlob(mediaBlobUrl)\n              blobToBase64(mediaBlobUrl)\n              recordStop()\n              stopRecording()\n          }}>Stop Recording</button>\n          {\n        !start && <video src={mediaBlobUrl??''} controls autoPlay loop />\n    }\n          \n        </div>\n      )}\n    />\n    </>\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}